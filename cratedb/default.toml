[enterprise]
  license = "false"

[cluster]
  name = "cratedb"
  
  [cluster.graceful_stop]
    min_availability = "primaries"
    reallocate = "true"
    timeout = "2h"
    force = "false"

  [cluster.info]
    [clsuter.info.update]
      interval = "30s"

  [cluster.routing]
    [cluster.routing.allocation]
      enable = "true"
      node_initial_primaries_recoveries = "4"
      node_concurrent_recoveries = "2"
      allow_rebalance = "indices_all_active"
      cluster_concurrent_rebalance = "2"

      [cluster.routing.allocation.awareness]
        attributes = ""

      [cluster.routing.allocation.balance]
	index = "0.5f"
	primary = "0.05f"
        shard = "0.45f"
	threshold = "1.0f"

      [cluster.routing.allocation.disk]
        threshold_enabled = "true"

        [cluster.routing.allocation.disk.watermark]
	  low = "85%"
	  high = "90%"

[node]
  name = "Piz Buin"
  master = "true"
  data = "true"
  rack = "rack314"
  max_local_storage_nodes = "1"

  [node.breaker]
    [node.breaker.query]
      limit = "60%"
      overhead = "1.09"

  [node.sql]
    read_only = "false"

[table]
  [table.index]
    number_of_replicas = "1"
    refresh_interval = "1000"

    [table.index.blocks]
      read_only = "false"
      read = "false"
      write = "false"
      metadata = "false"

    [table.index.translog]
      flush_threshold_ops = "unlimited"
      flush_threshold_size = "200mb"
      flush_threshold_period = "30m"
      disable_flush = "false"

    [table.index.routing]
      [table.index.routing.allocation]
        enable = "true"
	total_shards_per_node = "-1"

    [table.index.recovery]
      initial_shards = "quorum"

    [table.index.warmer]
      enabled = "true"

[path]
  conf = "../config/"
  data = "../data/"
  work = "../work/"
  logs = "../logs/"
  plugins = "../plugins/"
  repo = "../repo1/, ../repo2/"

[plugin]
  mandatory = "mapper-attachments,lang-groovy"

[bootstrap]
  mlockall = "false"

[network]
  bind_host = "192.168.0.1"
  publish_host = "192.168.0.1"
  host = "192.168.0.1"

[transport]
  [transport.tcp]
    port = "4300"
    compress = "true"

[http]
  port = "4200"
  max_content_length = "100mb"
  enabled = "false"

[gateway]
  recover_after_nodes = "2"
  recover_after_time = "5m"
  expected_nodes = "3"

[indices]
  [indices.fielddata]
    [indicies.fielddata.breaker]
      limit = "60%"
      overhead = "1.0.3"

  [indices.recovery]
    max_size_per_sec = "40mb"
    concurrent_streams = "5"
    file_chunk_size = "512kb"
    translog_ops = "1000"
    translog_size = "512kb"
    compress = "true"
    max_bytes_per_sec = "20mb"
    retry_delay_state_sync = "500ms"
    retry_delay_network = "5s"
    retry_activity_timeout = "15m"
    retry_internal_action_timeout = "15m"
    retry_internal_long_action_timeout = "30m"

  [indices.store]
    [indices.store.throttle]
      type = "merge"
      max_bytes_per_sec = "20mb"

[discovery]
  type = "srv"

  [discovery.ec2]
    groups = "sg-example-1, sg-example-2"
    any_group = "true"
    availability_zones = ""
    ping_timeout = "3s"

  [discovery.srv]
    query = "_crate._srv.example.com"

  [discovery.zen]
    minimum_master_nodes = "1"
    publish_timeout = "30s"   

    [discovery.zen.ping]
      timeout = "3s"

      [discovery.zen.ping.multicast]
        enabled = "false"

      [discovery.zen.ping.unicast]
        hosts = ""

    [discovery.zen.fd]
      ping_timeout = "30s"
      ping_retries = "3"
      ping_interval = "1s"

[cloud]
  [cloud.aws]
    [cloud.aws.ec2]
      endpint = "http://example.com/endpoint"

  [cloud.azure]
    method = "vnet"

    [cloud.azure.management]
      [cloud.azure.management.api]
        id = "xxxxxxxxxx"
	secret = "my_password"

      [cloud.azure.management.resourcegroup]
        name = "myrg"

      [cloud.azure.management.subscrption]
        id = "xxxxx.xxxx.xxx.xxx"

      [cloud.azure.management.tenant]
        id = "xxxxxxxxxxx"

[threadpool]
  [threadpool.index]
    type = "fixed"
    queue_size = "200"

[monitor]
  [monitor.jvm]
    [monitor.jvm.gc]
      [monitor.jvm.gc.young]
        warn = "1000ms"
	info = "700ms"
	debug = "400ms"

      [monitor.jvm.gc.old]
        warn = "10s"
        info = "5s"
        debug = "2s"
    
[bulk]
  request_timeout = "1m"

[udc]
  enabled = "true"
  initial_delay = "10m"
  interval = "24h"
  url = "https://udc.crate.io/"

[es]
  [es.api]
    enabled = "false"

[blobs]
  path = "/path/to/blobs"

[repositories]
  [repositories.url]
    allowed_urls = "[\"http://example.org/root/*\", \"https://*.mydomain.com/*?*#*\"]"

[psql]
  enabled = "true"
  port = "5432"

[runtime]
  max_open_files = ""
  max_locked_memory = ""
  crate_startup_sleep_time = ""
  crate_java_opts = ""
  heapsize = ""

[logger]
  level = "INFO"
  action = "DEBUG"
  discovery = "TRACE"

  [logger.indices]
    recovery = "DEBUG"

  [logger.deprecation]
    discovery = "DEBUG"

  [logger.com]
    amazonaws = "WARN"

  [logger.appender]
    [logger.appender.console]
      type = "console"

      [logger.appender.console.layout]
        type = "consolePattern"
	conversionPattern = "\"[%d{ISO8601}][%-5p][%-25c] %m%n\""

    [logger.appender.file]
      type = "dailyRollingFile"
      file = "${path.logs}/${cluster.name}.log"
      datePattern = "\"'.'yyyy-MM-dd\""

      [logger.appender.file.layout]
        type = "pattern"
        conversionPattern = "\"[%d{ISO8601}][%-5p][%-25c] %m%n\""
