worker_processes  {{cfg.worker_processes}};
daemon off;

events {
    worker_connections  {{cfg.events.worker_connections}};
}

http {
    include        mime.types;
    default_type   application/octet-stream;

    sendfile       {{cfg.http.sendfile}};
    tcp_nopush     {{cfg.http.tcp_nopush}};
    tcp_nodelay    {{cfg.http.tcp_nodelay}};

    keepalive_timeout  {{cfg.http.keepalive_timeout}};

    gzip  on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    {{~ #if cfg.http.extra_config}}

    # from http.extra_config
    {{cfg.http.extra_config}}
    {{~ /if}}

    # http server
    server {
        listen       {{cfg.http.listen.port}} default_server;
        listen       [::]:{{cfg.http.listen.port}} default_server;
        server_name  {{cfg.http.server.name}};

        # enable stub_status for local health checks
        location /stub_status {
            stub_status;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        {{~ #if cfg.redirector}}

        # redirect to another service on https
        location / {
            return 301 https://{{#if cfg.http.server.canonicalize}}$server_name{{else}}$host{{/if}}$request_uri;
        }
        {{~ else ~}}


        {{~ #if cfg.http.server.ssl.enable}}

        # force all requests to https
        location / {
            return 301 https://{{#if cfg.http.server.canonicalize}}$server_name{{else}}$host{{/if}}$request_uri;
        }
    }

    # https server
    server {
        listen       {{cfg.http.server.ssl.port}} default_server;
        listen       [::]:{{cfg.http.server.ssl.port}} default_server;
        server_name  {{cfg.http.server.name}};

        ssl on;
        ssl_protocols {{cfg.http.server.ssl.protocols}};
        ssl_certificate {{#if cfg.http.server.ssl.certificate}}ssl.crt{{else}}{{cfg.http.server.ssl.certificate_file}}{{/if}};
        ssl_certificate_key {{#if cfg.http.server.ssl.key}}ssl.key{{else}}{{cfg.http.server.ssl.key_file}}{{/if}};
        fastcgi_param HTTPS on;
        {{~ /if}}

        {{~ #if cfg.http.server.extra_config}}

        # from http.server.extra_config
        {{cfg.http.server.extra_config}}
        {{~ /if}}

        # default location
        location / {
            root   {{#if cfg.http.server.default_location.root}}{{cfg.http.server.default_location.root}}{{else}}{{pkg.svc_data_path}}{{/if}};
            index  {{cfg.http.server.default_location.index}};

            {{~#if cfg.http.server.canonicalize}}

            # redirect to canonical host name
            if ($host != $server_name) {
                return 301 $scheme://$server_name$request_uri;
            }
            {{~ /if}}

            {{~ #if cfg.http.server.default_location.extra_config}}

            # from http.server.default_location.extra_config
            {{cfg.http.server.default_location.extra_config}}
            {{~ /if}}
        }


        {{~ /if}}
    }
}
