# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# see server.KafkaConfig for additional details and defaults

############################# Server Basics #############################
[server]
# The id of the broker. This must be set to a unique integer for each broker.
#broker_id=0

# Switch to enable topic deletion or not, default value is false
delete_topic_enable=false

############################# Socket Server Settings #############################
[socket]
# The address the socket server listens on. It will get the value returned from
# java.net.InetAddress.getCanonicalHostName() if not configured.
#   FORMAT:
#     listeners = security_protocol://host_name:port
#   EXAMPLE:
#     listeners = PLAINTEXT://your.host.name:9092
#listeners=PLAINTEXT://:9092

# Hostname and port the broker will advertise to producers and consumers. If not set,
# it uses the value for "listeners" if configured.  Otherwise, it will use the value
# returned from java.net.InetAddress.getCanonicalHostName().
#advertised_listeners=PLAINTEXT://your.host.name:9092

# The number of threads handling network requests
num_network_threads=3

# The number of threads doing disk I/O
num_io_threads=8

# The send buffer (SO_SNDBUF) used by the socket server
socket_send_buffer_bytes=102400

# The receive buffer (SO_RCVBUF) used by the socket server
socket_receive_buffer_bytes=102400

# The maximum size of a request that the socket server will accept (protection against OOM)
socket_request_max_bytes=104857600


############################# Log Basics #############################
[log]
# A comma seperated list of directories under which to store log files
#log_dirs=""

# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
num_partitions=1

# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
# This value is recommended to be increased for installations with data dirs located in RAID array.
num_recovery_threads_per_data_dir=1
flush_offset_checkpoint_interval_ms=60000
flush_scheduler_interval_ms=9223372036854775807

# Conflicts with log.retention.hours!
#retention_minutes=
#retention_ms=

roll_hours=168
#roll_ms=
jitter_hours=0
#jitter_ms=

segment_delete_delay_ms=60000
cleaner_backoff_ms=15000
cleaner_dedupe_buffer_size=134217728
cleaner_delete_retention_ms=86400000
cleaner_enable=true
cleaner_io_buffer_load_factor=0.9
cleaner_io_buffer_size=524288
# cleaner_io_max_bytes_per_second=
cleaner_min_cleanable_ratio=0.5
cleaner_min_compaction_lag_ms=0
cleaner_threads=1
cleanup_policy="delete"
index_interval_bytes=4096
index_size_max_bytes=10485760
message_format_version="0.10.1"
# message_timestamp_difference_max_ms=9223372036854775807
message_timestamp_type="CreateTime"
preallocate=false


############################# Log Flush Policy #############################
[log.flush]
# Messages are immediately written to the filesystem but by default we only fsync() to sync
# the OS cache lazily. The following configurations control the flush of data to disk.
# There are a few important trade-offs here:
#    1. Durability: Unflushed data may be lost if you are not using replication.
#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to exceessive seeks.
# The settings below allow one to configure the flush policy to flush data after a period of time or
# every N messages (or both). This can be done globally and overridden on a per-topic basis.

# The number of messages to accept before forcing a flush of data to disk
#interval_messages=10000

# The maximum amount of time a message can sit in a log before we force a flush
#interval_ms=1000

############################# Log Retention Policy #############################
[log.retention]
# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.

# The minimum age of a log file to be eligible for deletion
hours=168

# A size-based retention policy for logs. Segments are pruned from the log as long as the remaining
# segments don't drop below log.retention.bytes.
#bytes=1073741824

# The maximum size of a log segment file. When this size is reached a new log segment will be created.
segment_bytes=1073741824

# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
check_interval_ms=300000

############################# Zookeeper #############################
[zookeeper]
# Zookeeper connection string (see zookeeper docs for details).
# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
# You can also append an optional chroot string to the urls to specify the
# root directory for all kafka znodes.
host="localhost"
port=2181
# Timeout in ms for connecting to zookeeper
connection_timeout_ms=6000
session_timeout_ms=6000
set_acl=false
sync_time_ms=2000

############################### SASL ###############################
[sasl]
enabled_mechanisms="GSSAPI"
kerberos_kinit_cmd="/usr/bin/kinit"
kerberos_min_time_before_relogin=60000
kerberos_principal_to_local_rules="DEFAULT"
kerberos_service_name="null"
kerberos_ticket_renew_jitter=0.05
kerberos_ticket_renew_window_factor=0.8
mechanism_inter_broker_protocol="GSSAPI"

############################## Replica #############################
[replica]
fetch_min_bytes=1
fetch_wait_max_ms=500
high_watermark_checkpoint_interval_ms=5000
lag_time_max_ms=10000
socket_receive_buffer_bytes=65536
socket_timeout_ms=30000
fetch_backoff_ms=1000
fetch_max_bytes=1048576
fetch_response_max_bytes=10485760

############################### SSL ################################
[ssl]
cipher_suites="null"
client_auth="none"
enabled_protocols="TLSv1.2,TLSv1.1,TLSv1"
key_password="null"
keymanager_algorithm="SunX509"
keystore_location="null"
keystore_password="null"
keystore_type="JKS"
protocol="TLS"
provider="null"
trustmanager_algorithm="PKIX"
truststore_location="null"
truststore_password="null"
truststore_type="JKS"
endpoint_identification_algorithm="null"
secure_random_implementation="null"

############################## Offsets #############################
[offsets]
commit_required_acks=-1
commit_timeout_ms=5000
load_buffer_size=5242880
retention_check_interval_ms=600000
retention_minutes=1440
topic_compression_codec=0
topic_num_partitions=50
topic_replication_factor=3
topic_segment_bytes=104857600

############################# Advanced #############################

# Those config are the default from Apache Kafka documentation page
[advanced]
auto_create_topics_enable=true
auto_leader_rebalance_enable=true
background_threads=10
compression_type="producer"
leader_imbalance_check_interval_seconds=300
leader_imbalance_per_broker_percentage=10

message_max_bytes=1000012
min_insync_replicas=1
num_replica_fetchers=1
offset_metadata_max_bytes=4096

queued_max_requests=500

request_timeout_ms=30000
unclean_leader_election_enable=true
broker_id_generation_enable=true
broker_rack="null"
connections_max_idle_ms=600000
controlled_shutdown_enable=true
controlled_shutdown_max_retries=3
controlled_shutdown_retry_backoff_ms=5000
controller_socket_timeout_ms=30000
default_replication_factor=3
fetch_purgatory_purge_interval_requests=1000
group_max_session_timeout_ms=300000
group_min_session_timeout_ms=6000
inter_broker_listener_name="null"
inter_broker_protocol_version="0.10.1"

max_connections_per_ip=2147483647
max_connections_per_ip_overrides=""
principal_builder_class="org.apache.kafka.common.security.auth.DefaultPrincipalBuilder"
producer_purgatory_purge_interval_requests=1000

reserved_broker_max_id=1000

security_inter_broker_protocol="PLAINTEXT"

authorizer_class_name=""
create_topic_policy_class_name="null"
listener_security_protocol_map="SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,TRACE:TRACE,SASL_SSL:SASL_SSL,PLAINTEXT:PLAINTEXT"
metric_reporters=""
metrics_num_samples=2
metrics_recording_level="INFO"
metrics_sample_window_ms=30000
quota_window_num=11
quota_window_size_seconds=1
replication_quota_window_num=11
replication_quota_window_size_seconds=1
